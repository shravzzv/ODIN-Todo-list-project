* {
  box-sizing: border-box;
}

:root {
  --txt-clr-prm: black;
  --bg-clr-prm: white;
  --bg-clr-sec: rgb(250, 245, 245);
  --addBtn-clr: white;
  --addBtn-bg-clr: black;
  --bdr-radius-prm: 10px;
}

body {
  color: var(--txt-clr-prm);
  background-color: var(--bg-clr-prm);
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
    Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

img {
  max-width: 100%;
}

input,
textarea,
select {
  border-radius: var(--bdr-radius-prm);
  background-color: var(--bg-clr-sec);
  border: none;
  outline: none;
  color: var(--txt-clr-prm);
  padding: 0.5em 0.25em;
  line-height: 1;
  width: 100%;
  /* appearance: none; */
}

button {
  cursor: pointer;
  background-color: var(--bg-clr-prm);
  color: var(--txt-clr-prm);
  border-radius: var(--bdr-radius-prm);
  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
  padding: 0.5em;
}

button:hover {
  transform: translateY(-2px);
}

@media (prefers-color-scheme: dark) {
  :root {
    --txt-clr-prm: white;
    --bg-clr-prm: #181a1b;
    --bg-clr-sec: black;
    --addBtn-clr: black;
    --addBtn-bg-clr: white;
  }
}

/* components */

/* logo */
.logo {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1em;
}

.logo > img {
  width: 50px;
  height: 50px;
}

.logo > p {
  font-size: 1.5rem;
  font-weight: bold;
}

/* tabs */

.tabs {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1em;
  margin: auto 1em;

  position: sticky;
  top: 10px;
}

.tabsContainer {
  display: flex;
  align-items: center;
  justify-content: flex-start;

  gap: 1em;
  padding: 0.25em 0.5em;

  overflow-x: scroll;
  position: sticky;
  top: 0;

  background-color: var(--bg-clr-sec);
  border-radius: var(--bdr-radius-prm);

  /* Hide scrollbar for IE, Edge and Firefox */
  -ms-overflow-style: none;
  scrollbar-width: none;
}

/* Hide scrollbar for Chrome, Safari and Opera */
.tabsContainer::-webkit-scrollbar {
  display: none;
}

.tabsContainer > button {
  background-color: var(--bg-clr-prm);
  color: var(--txt-clr-prm);
  border-radius: var(--bdr-radius-prm);
  padding: 0.5em;
  text-transform: uppercase;
  border: none;
  cursor: pointer;
  box-shadow: rgba(50, 50, 105, 0.15) 0px 2px 5px 0px,
    rgba(0, 0, 0, 0.05) 0px 1px 1px 0px;
  /* Add white-space property to prevent text from wrapping */
  white-space: nowrap;
}

.tabsContainer > button:hover {
  background-color: var(--txt-clr-prm);
  color: var(--bg-clr-prm);
}

.addListBtn {
  width: 35px;
  height: 35px;
  border-radius: 50%;
  border: none;
  cursor: pointer;
  font-size: 1.5rem;
  background-color: var(--bg-clr-sec);
  color: var(--txt-clr-prm);
  flex-shrink: 0;
  padding: 0;
}

.addListBtn:hover {
  background-color: var(--txt-clr-prm);
  color: var(--bg-clr-prm);
}

/* addTodo */

.addTodo {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  position: fixed;
  bottom: 25px;
  right: 25px;
  font-size: 2rem;
  border: none;
  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
  color: var(--addBtn-clr);
  background-color: var(--addBtn-bg-clr);
  padding: 0;
}

/* short todo */
.shortTodo {
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  gap: 0.5em;
  padding: 1em;
  margin: 1em;
  border-radius: 1em;
  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
  background-color: var(--bg-clr-sec);
}

.shortTodo > .contents {
  width: 100%;
}

.shortTodo .title {
  margin-top: 0;
  margin-bottom: 0.15em;
}

.shortTodo .desc {
  margin: 0.5em 0 0.5em;
}

.shortTodo .subContainer {
  width: 100%;
  display: flex;
  align-items: center;
  gap: 1.5em;
}

.shortTodo .subContainer > button {
  background-color: var(--bg-clr-prm);
  color: var(--txt-clr-prm);
  border: none;
  border-radius: var(--bdr-radius-prm);
  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
  padding: 0.5em;
}

/* new List modal */
.newListForm {
  margin: auto;
  padding: 1em;
  background-color: var(--bg-clr-sec);
  border-radius: var(--bdr-radius-prm);
  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
  display: none;
}

.newListForm.show {
  position: fixed;
  top: 30%; /* Vertically center */
  left: 50%; /* Horizontally center */
  transform: translate(-50%, -50%); /* Centering trick */

  display: flex;
  flex-wrap: wrap;
  gap: 1em;
  width: min(90%, 350px);
}

/* new todo modal */
.newTodoForm {
  padding: 1em;
  background-color: var(--bg-clr-sec);
  border-radius: var(--bdr-radius-prm);
  box-shadow: #0000003d 0px 3px 8px;
  display: none;
}

.newTodoForm.show {
  position: fixed;
  top: 30%;
  left: 50%;
  transform: translate(-50%, -50%); /* Centering trick */

  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
  width: min(90%, 500px);
}

.newTodoForm > input:first-of-type {
  font-size: 1.75rem;
  margin-bottom: 0.25em;
}

.newTodoForm > textarea {
  resize: vertical;
  margin-bottom: 1em;
}

.widgetsContainer {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  width: 100%;
  gap: 1em;
}

.widgetsContainer > * {
  background-color: var(--bg-clr-prm);
  box-shadow: #0000003d 0px 3px 8px;
  cursor: pointer;
  margin-bottom: 1em;
}

.widgetsContainer .date::before {
  content: 'ðŸ“†';
}

.newTodoForm > .buttonsContainer {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: 1em;
  width: 100%;
}

/* common to newListForm and newTodoForm */
.newListForm > button,
.newTodoForm button {
  border: 1px solid transparent;
}

.newListForm .submit,
.newTodoForm button[type='submit'] {
  background-color: green;
  color: white;
}

.newListForm .cancel,
.newTodoForm button[type='button'] {
  background-color: var(--bg-clr-prm);
  color: var(--txt-clr-prm);
}

/* expanded Todo */
.expTodo {
  display: none;
}

.expTodo.show {
  display: block;
  padding: 1em;
  border-radius: 1em;
  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
  background-color: var(--bg-clr-sec);

  position: fixed;
  top: 10%;
  left: 50%;
  width: 90vw;
  height: max-content;
  transform: translate(-50%);
}

.expTodo > header {
  border-bottom: 1px solid var(--txt-clr-prm);
  display: flex;
  align-items: center;
  gap: 1em;
  padding-bottom: 1em;
}

.expTodo > header > button {
  border-color: transparent;
}

.expTodo > header > button:first-of-type {
  margin-right: auto;
}

.expTodo > main {
  display: flex;
  align-items: baseline;
  gap: 1em;
}

.expTodo .title {
  margin-bottom: 0;
}

.expTodo .desc {
  opacity: 0.9;
}

.expTodo .section {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: 1em;
  margin: 1em;
}

.expTodo .section button {
  border: none;
}

/* check circle */

.completeCircle {
  border: 2px solid var(--txt-clr-prm);
  width: 25px;
  height: 25px;
  border-radius: 50%;
  cursor: pointer;
  padding: 0;
  flex-shrink: 0;
}

.completeCircle:hover {
  border-color: green;
}

/* desktop styles */

@media screen and (min-width: 768px) {
  .tabs {
    justify-content: center;
  }

  .todosContainer {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(325px, 1fr));
  }

  .addTodo {
    cursor: pointer;
    font-size: 1.5rem;
  }

  .shortTodo {
    cursor: pointer;
  }

  .shortTodo:hover {
    box-shadow: red 0px 0px 12px;
  }

  .expTodo.show {
    width: max-content;
  }

  .widgetsContainer .date::before {
    content: '';
  }
}
